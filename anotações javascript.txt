Simbologia:
=:Recebe
==:igual
===:idêntico
>:maior
<:menor
>=:maior ou igual
<=:menor ou igual
+:adição
-:subtração 
*:multiplicação 
/:divisão
%:resto da divisão 
&:Conjunção
||:Ou
`${}`:chamando uma variável
{}:abrindo bloco
if:se
else:se não
else if:a ser usado depois de um if e antes de um else
switch:entre as alternativas
case:caso
break:quebrar



Módulo:A

Para aprender javascript a melhor forma é aprender já com os fundamentos do ecmascript pois é uma forma mais otimizada e aperfeiçoada da linguagem, treino e estudos são importantes, o estudo é necessário para manter o conhecimento vivo, não pule vídeos para não se perder no conteúdo.
Podemos alterar alguns sites por meio do console usando javascript, por exemplo colocando um alerta indo no console e digitando alert('lorem') ou trocando a cor de fundo indo em console e digitando document.body.style.background = 'blue' mudando o fundo para azul.
Podemos alterar elementos como logos ou cores, adicionar filtros ou até esconder coisas por exemplo escondendo a logo do google usando o código document.querySelector('img.lnXdpd').style.visibility = 'hidden'.
podemos também mudar um texto de uma área usando por exemplo document.querySelector('nome do elemento a ser alterado').innerHTML = 'novo texto desejado'.
     <script>
        window.alert('Minha Primeira Mensagem')
    </script>
Acima temos um exemplo de alerta.
        window.confirm('Está gostando de programar?')
Acima temos um exemplo de janela de confirmação.
        window.prompt('qual seu nome?')
Acima temos um exemplo de janela de prompt para digitar informações.
Por enquanto apenas recebemos os dados não armazenamos eles e nem tratamos, coisas que vamos aprender no módulo seguinte.

Módulo:B

Para comentários bastar usar // ou /*lorem*/
Para entender variáveis basta imaginar elas como vagas de veículos no caso informações.
Por exemplo:
Vaga a1 = carro1
a vaga a1 recebe o carro 1.
igual num estacionamento normal para eu colocar um carro em uma vaga precisa-se tirar o carro anterior desta vaga.
Podemos também deixar vagas vazias por exemplo:
Vaga a1 = null
Vaga a1 recebe nada.
ao invés de vaga esta os criando variáveis ou seja ao inves de vaga vamos usar a palavra var de variável.
Para cada var é necessário um indentificador ou seja um nome.
Os dados a serem recebidos podem ser em formato de números e de letras no caso caracteres em geral.
Podemos criar var de diversos tamanhos.
Existem três formas de delimitar uma string sendo elas ' aspas simples ' " aspas duplas" e ´ apócrifos ` o nome de cada variável chamamos de identificadores e eles possuem regras podem começar com letras, $ ou _, não podem começar com números, podem ser usados acentos e simbolos em variáveis, não podem conter espaços mas podem ter _ e por fim não podem ser palavras reservadas por exemplo function ou alert, variáveis são case sensitives ou seja diferenciam maiúsculas das minúsculas, tente sempre definir nomes coerentes para suas variáveis.
Números = Number
Caracteres = String
True Or False = Boolean
Podemos usar typeof para descobrir o tipo de uma variável.

<!-- Assim que comentamos em html.-->
 Pomos alocar prompts em variaveis como por exemplo abaixo:

        var nome = window.prompt('qual seu nome?')
        window.alert('É um grande prazer te conhecer ' + nome)

O mais nesse caso tem uma função de concatenação. Prompt sempre irá retornar os dados  no formato de string.
para fazer o tratamento dos dados e transformá-los em numeros basta usar number por exemplo:

        var n2 = Number(window.prompt('Qual seu segundo número?'))

E para transformar números em strings basta usar String() ou .toString()

Um exemplo de uso para isso:

    <script>
        var n1 = Number(window.prompt('Qual seu  primeiro número?'))

        var n2 = Number(window.prompt('Qual seu segundo número?'))

        var s = n1 + n2
        window.alert('A soma dos números é :' + s)
    </script>

podemos fazer da seguinte forma também:
> `Estou aprendendo ${s}`

podemos também tornar isso ainda mais útil:

> `O ${nome} de ${idade} ganha mensalmente o valor de ${sal}R$`   
'O Rafael de 21 ganha mensalmente o valor de 15000R$'

Podemos usar também s.length diz quantos caracteres a string tem.
podemos usar também s.toUpperCase() para tornar tudo em maiusculas.
podemos usar também s.toLowerCase() para tornar tudo em minúsculas.

por exemplo:

    <script>
        var nome = window.prompt('Qual seu nome?')
        document.write(`Seu nome é ${nome} e ele tem ${nome.length} letras`)
    </script>

Basta usar scripts para fazer muitas coisas por exemplo:

    <script>
        var nome = window.prompt('Qual seu nome?')
        document.write(`Seu nome é <strong>${nome}</strong> e ele tem ${nome.length} letras<br>`)
        document.write(`Seu nome em maiúsculas é ${nome.toUpperCase()}`)
    </script>

Podemos também ficar casas decimais em variáveis e trocar caracteres por exemplo:
> n1.toFixed(2).replace('.',',')

Podemos também usar a conversão para valores monetários por exemplo:
> n1.toLocaleString('pt-br',{style:'currency',currency: 'BRL'})
'R$ 1.545,50'

> n1.toLocaleString('pt-br',{style: 'currency', currency: 'USD'})
'US$ 1.545,50'

> n1.toLocaleString('pt-br',{style:'currency',currency:'EUR'
})
'€ 1.545,50'

No javascript temos vários tipos de operadores aritméticos, de atribuição, relacionais, lógicos e ternários.

Para usar o tratamento de dados numéricos eles devem ser declarados no prompt como number caso contrário serão considerados strings.

5+2=7
5-2=3
5*2=10
5/2=2.5
5%2=1
5**2=25
Podemos também usar parênteses para priorizar uma equação por exemplo:
(5+3)/2=4 

Ordem de precedência:
()
**
* ou / ou %
+ ou -

podemos usar caso formos fazer a referência a própria equação por exemplo n+=4 ou seja n = n + 4 e assim por diante usando os demais operadores.  
Podemos incrementar em 1 ou decrementar em 1 usando o operador de incremento por exemplo x++ ou x-- ou seja x+1 ou x-1
5>2 maior que
4<7 menor que
8>=8 maior ou igual a
7<=9 menor ou igual a
7==7 igual a
8!=9 diferente de
'5' === '5' idêntico a
5 !== '5' não é idêntico a
! negação
&& conjunção
|| disjunção
Ordem:
aritméticos
relacionais
lógicos

Operador Ternário
teste?true:false
média>=7?aprovado:reprovado 
Por exemplo:

var a = 8
var res = a % 2 == 0 ? 7 : 9
se 8 / 2 sobrar 0 então resultado vai receber 7 se não vai receber 9
resultado = res = 7

CTRL+SHIFT+A abre o live server.

Aprendendo a usar DOM, árvore dom:
window(a raiz de todo objeto tudo que está na sua janela está em um window)
dentro do window temos por exemplo:
location(qual a localização do seu site, url, página atual e página anterior etc...)
document(Documento atual)
history(Guarda de onde veio e para onde vai)
dentro do document temos por exemplo o objeto HTML
dentro de html temos dois objetos o head e o body
quem está a baixo na árvore é child quem está acima imediatamente é parente
os child de head são por exemplo meta, tittle e etc...
já os child de body são por exemplo h1, div, p e etc...
a child de p por exemplo no caso do ex006 da aula 09 é Strong.
Podemos selecionar por tag, id, nome, classe e por seletor na árvore DOM
Por exemplo se quisermos reproduzir o que está escrito no primeiro parágrafo podemos usar:

    <script>
        var p1 = window.document.getElementsByTagName('p')[0]
        window.document.write(p1.innerText)
    </script>

damos a p1 o valor que está contido na tag p [0] lembrando que programação é em formato de matriz e toda matriz começa em 0, se quisermos o segundo paragrafo colocamos [1] e assim por diante, o innertext serve para dizer o texto que está contido na variável p1 e não a variável em sí.
Podemos também adicionar um texto prévio no write e concatenar com a variável assim:

    <script>
        var p1 = window.document.getElementsByTagName('p')[0]
        window.document.write('Está Escrito Assim: '+p1.innerText)
    </script>

Podemos também alterar um item por meio do javascript como por exemplo:

        var p1 = window.document.getElementsByTagName('p')[0]
        p1.style.color = 'blue'

        var corpo = window.document.body
        corpo.style.background = 'black'

Para pegar o comando todo usamos innerhtml por exemplo:
	getElementsByTagName('div')[0]
        window.document.write('<br>'+d1.innerHTML)
Assim ele pegará até as características como negrito etc...
Podemos usar também em alertas por exemplo:
    
    window.alert(p1.innerText)

Podemos também por exemplo pintar o fundo da div apenas:
   
    d1.style.background = 'red'

Seja por meio da tag ou por meio do id por exemplo:

	var d1 = window.document.getElementById('lorem')
	lorem.style.background = 'green'

Podemos mudar o conteúdo por meio do JS por exemplo:

        d1.innerText = 'Alterando o conteúdo'

Podemos também unificar fazendo por exemplo:

	window.document.getElementById('lorem').innerText = 'lorem ipsun'

Podemos também usar query selector por exemplo:

	window.document.querySelector('lorem#id')
			ou
	window.document.querySelector('lorem.class')

Podemos usar line-height nas css para poder centralizar verticalmente um texto.

Para termos referências de eventos possíveis basta pesquisar event reference MDN.

Funções

Funções são feitas em blocos e são delimitados por {} e devem ser nomeados com o nome da ação(parâmetros), para usarmos devemos colocar no elemento desejado o on seguido do evento desejado por exemplo onclick por exemplo:

    <div id="area" onclick="clicar()" onmouseenter="entrar()" 	onmouseout="sair()">
        interaja...
    </div>

    <script>
        function clicar() {
        window.document.getElementById('area').innerText = 'Clicou!'
        window.document.getElementById('area').style.background = 'red'
        }

        function entrar(){
        window.document.getElementById('area').innerText = 'Entrou!'
        window.document.getElementById('area').style.background = 'yellow'
        }

        function sair(){
        window.document.getElementById('area').innerText = 'Saiu!'
        window.document.getElementById('area').style.background = 'green'
        }
    </script>

Ou podemos limpar o html permitindo colocar eventos dentro do script usando listener da seguinte forma:

    <div id="area">
        interaja...
    </div>

    <script>
        window.document.getElementById('area').addEventListener('click',clicar)
 
        	window.document.getElementById('area').addEventListener('mouseenter',entr	ar)
       
        window.document.getElementById('area').addEventListener('mouseout',sair)

        function clicar() {
        window.document.getElementById('area').innerText = 'Clicou!'
        window.document.getElementById('area').style.background = 'red'
        }

        function entrar(){
        window.document.getElementById('area').innerText = 'Entrou!'
        window.document.getElementById('area').style.background = 'yellow'
        }

        function sair(){
        window.document.getElementById('area').innerText = 'Saiu!'
        window.document.getElementById('area').style.background = 'green'
        }
    </script>

Podemos detectar erros usando o devtools para localizar e corrigir.

Podemos usar isso para dar uma funcionalidade melhor aos inputs por exemplo:

<!DOCTYPE html>
<html lang="pt-br">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Somando Números</title>
    <style>
        body{
            font: normal 20px Arial;
        }
        input{
            margin-bottom: 5px;
            width: 100px;
        }
    </style>
</head>
<body>
    <h1>Somando Valores</h1>
    <input type="number" name="txt1" id="itxt1"> +
    <input type="number" name="txt2" id="itxt2">
    <input type="button" value="Somar" onclick="somar()">
    <div id="res">Resultado:</div>
    <script>
        function somar(){
            var tn1 = window.document.getElementById('itxt1')

            var tn2 = window.document.getElementById('itxt2')

            var res = window.document.getElementById('res')

            var n1 = Number(tn1.value)
            var n2 = Number(tn2.value)
            var s = n1 + n2

            res.innerHTML = `A soma entre ${n1} + ${n2} = <strong>${s}</strong>`
        }
    </script>
</body>
</html>

Módulo D: Condições

If=se
else= se não

Usamos blocos para condições, condição simples são condições apenas com if, condição normal tem if e else. Um exemplo de condição simples:

var vel = 60
console.log(`A velocidade do seu carro é ${vel}km/h`)
if (vel > 60) {
    console.log(`Você ultrapassou o limite de velocidade. Multado!`)
}
console.log(`Dirija sempre usando cinto de segurança!`)

Um exemplo de if e else:

var pais = 'Brasil'
console.log(`Vivendo em ${pais}`)
if (pais == 'Brasil') {
    console.log(`Você é Brasileiro!`)
} else {
    console.log(`você é Gringo`)
}

Podemos fazer isso no formato de site também por exemplo um exemplo de site usando o exemplo acima de multas:

<!DOCTYPE html>
<html lang="pt-br">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Estudando condições</title>
</head>
<body>
    <h1>Sistema De Multas</h1>
    Velocidade do carro:<input type="number" name="vel" id="ivel">Km/h
    <input type="button" id="botao" value="verificar">

    <div id="res">

    </div>
    <script>
        window.document.getElementById('botao').addEventListener('click',calcular)

        function calcular(){
            var vel = Number(document.getElementById('ivel').value)

            document.getElementById('res').innerHTML = `<p>Sua velocidade atual é de <strong>${vel}Km/h</strong></p>`
            if (vel > 60) {
                document.getElementById('res').innerHTML += `<p>isso são <strong>${vel-60}Km/h</strong> acima do limite de velocidade você está <strong>Multado!</strong></p>`
            }
            document.getElementById('res').innerHTML += `<p>Dirija sempre com sinto de segurança</p>`
        }
    </script>
</body>
</html>

Podemos também usar o exemplo acima de nacionalidade:

<!DOCTYPE html>
<html lang="pt-br">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Estudando Condição</title>
</head>
<body>
    <h1>Qual Seu Pais De Origem?</h1>
    <input type="text" name="nac" id="inac">
    <input type="button" value="verificar" id="botao">

    <div id="res">

    </div>
    <script>
        document.getElementById('botao').addEventListener('click', nacionalidade)

        function nacionalidade() {
            var resposta = (document.getElementById('inac').value)

            if (resposta == 'Brasil' || resposta == 'brasil' || resposta == 'BRASIL' || resposta == 'br' || resposta == 'BR' || resposta == 'Br'){
                document.getElementById('res').innerHTML = `Seu pais de origem é <strong>${resposta}</strong> então você é <strong>Brasileiro</strong>`
            } else {
                document.getElementById('res').innerHTML = `Seu pais de origem é <strong>${resposta}</strong> então você é <strong>Estrangeiro</strong>`
            }
        }
    </script>
</body>
</html>

Condições aninhadas:
São condições onde temos uma dentro da outra como num ninho podemos por exemplo fazer um sistema que pegue a hora do sistema e de bom dia,boa tarde ou boa noite ao usuário. A baixo o exemplo:

var agora = new Date()
var hora = agora.getHours()
console.log(`Agora são exatamente ${hora} horas.`)
if (hora > 7 && hora < 12){
    console.log(`Bom Dia!`)
} else if(hora >= 12 && hora < 19){
    console.log(`Boa Tarde!`)
}else if (hora >= 19 && hora < 24){
    console.log(`Boa Noite!`)
}else {
    console.log(`Boa Madrugada!`)
}

Lembrando que por estarmos rodando o programa diretamente no node estamos usando o elemento console.log para criar um site isso deve ser alterado.

Condição Múltipla:

Para isso usamos o switch(expressão){
bloco relacionado

case valor 1:{
Comando
}
break

case valor 2:{
Comando
}
break

case valor 3:{
Comando
}
break

default:{
Comando
}
break
}

Break é extremamente importante ou ele rodará infinitamente até achar o break.

Switch só funciona com números inteiros e strings não funciona com intervalos então caso deseje que o resultado seja tal se o número for entre 1 e 5 é muito mais indicado usar if e else. Um exemplo de um comando com switch abaixo:

var agora = new Date()
var diasem = agora.getDay()

/*
Lembrando que o JS usa sistema de matriz ou seja sempre começa em 0 sendo assim:

0 = Domingo
1 = Segunda
2 = Terça
3 = Quarta
4 = Quinta
5 = Sexta
6 = Sábado

*/

switch(diasem){
    case 0:
         console.log(`Domingo`)
         break
    case 1:
         console.log(`Segunda`)
         break
    case 2:
         console.log(`Terça`)
         break
    case 3:
         console.log(`Quarta`)
         break
    case 4:
         console.log(`Quinta`)
         break
    case 5:
         console.log(`Sexta`)
         break
    case 6:
         console.log(`Sábado`)
         break
    default:
         console.log(`[ERRO]Dia Inválido!`)
         break
}

Exercício No Site:

Vamos fazer um site cujo o layout é de um body dentro dele teremos um header com um título, abaixo uma section com divs tendo o conteúdo e no final um footer com um copyright.

Para queexcutemos u sript n body no código devemos colocar no body o atributo onload e dentro dele devemos colocar a função desejada, podemos também fazer isso de forma externa, podemos carregar uma imagem por meio do html ou por meio do javascript, podemos colocar símbolo do copyright usando o &copy; no código, podemos colocar o nosso javascript em uma pasta externa por meio de um src assim não poluindo nosso index, quanto as css não há novidades aqui, em relação a parte de javascript temos por exemplo a declaração da varivel data e hora dentro da função para pegar esses dados do sistema do dispositivo, podemos fazer isso por meio dos:

    var data = new Date()
    var hora = data.getHours()

Também temos um código que irá adicionar uum texto na div ensagem dizendo as horas e sendo atualizado por meio da variável:

    window.document.getElementById('msg').innerHTML = `Agora são ${hora} horas.`

Lembrando que sempre deve ser usada a `` para podermos declarar variáveis dentro do texto, podemos também usar '' e "" porém não poderemos usar ${} para declarar variáveis.

Abaixo usamos condições compostas, usando if, else if e else colocando condições referentes ao horário e também colocando um bacground e imagem personalizada para cada fase do dia:

    if(hora >= 6 && hora < 12){
        window.document.getElementById('imagem').src = 'imagens/manha.png'
        document.body.style.background = '#468bce'
    }else if(hora >=12 && hora <19){
        window.document.getElementById('imagem').src = 'imagens/tarde.png'
        document.body.style.background = '#fa8b54' 
    }else if (hora >=19 && hora <24){
        window.document.getElementById('imagem').src = 'imagens/noite.png'
        document.body.style.background = '#3d1146'
    }else{
        window.document.getElementById('imagem').src = 'imagens/madrugada.png'
        document.body.style.background = '#1d2a3c'
    }

Agora para o ex015:

Aqui usamos um input do tipo radio lembrando que eles devem ter ids diferentes mas sempre o mesmo name caso contrário será permitido marcar mais de um deles ao mesmo tempo e não é o que desejamos, também é útil lembrar que podemos usar o elemento checked para deixar um deles pré selecionado ao um usuário abrir o site, criamos um input button verificar e também uma div resultado aonde será dado o resultado do script, aqui na parte das css temos um código no img que vai ser criado no javascript para impedir que a imagem seja descentralizada, infelizmente esse erro está acontecendo devido a forma que eu redimensionei as fotos selecionadas, aqui na parte de javascript coloquei um eventlistener para limpar o código html:

document.getElementById('ver').addEventListener('click', verificar)

Em seguida colocamos uma função verificar() nela novamente pegamos a data do sistema porém agora para usarmos o ano completo, ele será usado para descobrirmos a idade dos usuários fazendo a subtração do ano atual pelo ano digitado pelo usuário, em seguida declaramos a variável res para depois facilitar o uso daquela div res:

    var data = new Date()
    var ano = data.getFullYear()
    var res = document.getElementById('res')

Logo após isso colocamos mais uma condição composta e dentro dela colocamos uma conjunção formada de else if também, o if está sendo usado para uma mensagem de erro, já a parte utilizável do código está abaixo com a inclusão do img, uma variável vazia de gênero e a declaração de uma variável de sexo:

if(document.getElementById('iano').value.length == 0 || document.getElementById('iano').value > ano){
        window.alert('[Erro] Verifique os dados digitados e tente novamente!')
    }else{
        var fsex = document.getElementsByName('radsex')
        var idade = ano - Number(document.getElementById('iano').value)
        var gênero = ''
        var img = document.createElement('img')
        img.setAttribute('id','foto')
        if (fsex[0].checked){
            gênero = 'Homem'
            if (idade >=0 && idade <=3){
                //bebê
                img.setAttribute('src','imagens/bebem.png')
            }else if (idade >=4 && idade <=10){
                //criança
                img.setAttribute('src','imagens/criançam.png')
            }else if (idade >=11 && idade <=17){
                //adolescente
                img.setAttribute('src','imagens/adolescentem.png')
            }else if (idade >=18 && idade <= 25){
                //jovem
                img.setAttribute('src','imagens/jovemm.png')
            }else if(idade >=26 && idade <=40){
                //homem
                img.setAttribute('src','imagens/homem.png')
            }else if(idade >=41 && idade <=55){
                //maduro
                img.setAttribute('src','imagens/madurom.png')
            }else{
                //idoso
                img.setAttribute('src','imagens/idoso.png')
            }
        } else{
            gênero = 'Mulher'
            if (idade >=0 && idade <=3){
                //bebê
                img.setAttribute('src','imagens/bebef.png')
            }else if (idade >=4 && idade <=10){
                //criança
                img.setAttribute('src','imagens/criançaf.png')
            }else if (idade >=11 && idade <=17){
                //adolescente
                img.setAttribute('src','imagens/adolescentef.png')
            }else if (idade >=18 && idade <= 25){
                //jovem
                img.setAttribute('src','imagens/jovemf.png')
            }else if(idade >=26 && idade <=40){
                //Mulher
                img.setAttribute('src','imagens/mulher.png')
            }else if(idade >=41 && idade <=55){
                //madura
                img.setAttribute('src','imagens/maduraf.png')
            }else{
                //idosa
                img.setAttribute('src','imagens/idosa.png')
            }

Logo após isso colocamos a finalização de nosso projeto colocando o text align, a injeção de um innerhtml na div res, e finalmente um appendchild(adição de filho) e declarando que esse filho seria o img:

        res.style.textAlign = 'center'
        res.innerHTML = `Detectamos ${gênero} com ${idade} anos.`
        res.appendChild(img)

Lembrete:
.value (valor digitado em um input)
.checked (valor selecionado por um input radio)
Os modelos acima são divididos entre homem e mulher.
Assim finalizamos essa parte de exercícios da aula 12 agora partindo para a aula 13.

Módulo E:

Aqui iniciamos o módulo E que falará sobre repetições em javascript

Iremos aprender as estruturas de repetição a seguir:

repetição com teste no inicio:
While

repetição com teste no final:
do while

repetição com controle:
for

Um exemplo de uso desta forma é caso queiramos escrever tudo bem 6 vezes podemos usar copia e cola ou podemos de forma mais inteligente usar laços como a seguir:

var c = 1
while(c <= 6){
    console.log('Tudo bem?')
    c++
}


/*
console.log('tudo bem?')
console.log('tudo bem?')
console.log('tudo bem?')
console.log('tudo bem?')
console.log('tudo bem?')
console.log('tudo bem?')
*/

var c = 1
do{
    console.log(`Tudo bem?${c}`)
    c++
}while(c <= 6)

A estrutura while é a mais usada mas sempre é bom pesquisar a mais apropriada para cada situação

Aula 14: For
for(início;teste lógico;incremento){

}

for(var c=1;c<=10;c++){
console.log(`tudo bem?${c}`)
}

Modo de depuração facilita muito para acharmos os erros de nossos códigos.

Como usar emojis em javascript:

innerHTML = `\u{1F449}`

resolvendo ex 16 de js:

document.getElementById('botao').addEventListener('click', contagem) // usado para adicionar um evento sem precisar mexer no html

function contagem() {
    //declarando variáveis abaixo em formato de string 👇 

    var ini = document.getElementById('iinic') 
    var fim = document.getElementById('ifim')
    var passo = document.getElementById('ipasso')
    var res = document.getElementById('res')

    //Abaixo temos um if que dará um aviso caso os inputs estejam vazios 👇 

    if(ini.value.length == 0 || fim.value.length == 0 || passo.value.length == 0){
   //abaixo temos um innerhtml que recebe texto e um alert de valor inválido  👇 

        res.innerHTML = 'Impossível contar!'
        window.alert('Valor inválido, impossível contar!')
    }else{
 //abaixo temos outro inner e também a conversão de algumas variáveis para num
        res.innerHTML = `Contando:<br>`
        var i = Number(ini.value)
        var f = Number(fim.value)
        var p = Number(passo.value)
        
//abaixo temos um if que caso o valor do passo seja 0 transformará ele em 1

        if(p <= 0){
            alert('Passo inválido, considerando passo 1')
            p = 1
        }
        if(i < f){
        //contagem crescente usando for
            for(var c = i; c <= f; c += p){
	//abaixo temos um inner que a cada loop adiciona mais um texto dizendo o valor atual do contador e adicionando mais um emoji 👇 
            res.innerHTML += ` ${c} \u{1F449}`
        }
        }else{
        //contagem regressiva usando for, criamos uma var c para ser contador
            for(var c = i; c >= f; c -= p){
            res.innerHTML += ` ${c} \u{1F449}`
        }
        }
        res.innerHTML += `\u{1f3c1}`
    }
}

resolvendo o ex 17 de js:

document.getElementById('botao').addEventListener('click', contagem)

function contagem(){
    var num = document.getElementById('inum')
//abaixo declaramos uma variável para o select 👇 
    var tab = document.getElementById('itabu')

    if(num.value.length == 0){
        alert('Impossível contar! Digite um valor válido.')
    }else{
        var n = Number(num.value)
        var c = 1
//abaixo temos um inner que recebe nenhum valor para limpar o contador a cada envio
        tab.innerHTML = ''
//enquanto c for menor ou igual a 10 executará o código dentro
        while(c <= 10){
//abaixo criamos uma variável e ela recebe a criação de um elemento option 
        var item = document.createElement('option')
//adicionamos um texto ao item criado acima
        item.text = `${n} X ${c} = ${n*c}`
//adicionamos um valor ao option criado sendo ele tab e o valor será do contador atual
        item.value = `tab${c}`
//adicionamos um filho no select sendo ele o item criado acima
        tab.appendChild(item)
//abaixo temos o incremento
        c++
        }
    }
}

Módulo F:

Variáveis compostas devem ser capazes de armazenar mais de um valor por vez em uma mesma estrutura

Vagas compostas são feitas de array(vetor) key(índice) element(elemento) value(valor), sendo organizadas da seguinte forma:

Ao ivés de usar:

var a = a1
var a2 = a2
var a3 = a3
var a4 = a4
car a5 = a5

use isto:

var a = [a1,a2,a3,a4,a5]

entendendo mais sobre arrays

//abaixo temos a declaração de variaveis
let num = [5,7,8,3,42]
//abaixo temos a adição de um elemento em um índice de uma variável lembrando que toda variável começa com o índice 0
num[5] = 6
//adiciona um elemento no fim do array
num.push(21)
//lê o que está na array
console.log(num)
//diz a quantidade de elementos na array
console.log(num.length)
//mostra o elemento no índice selecionado no exemplo abaixo o índice 0 o primeiro
console.log(num[0])
//coloca os elementos da array em ordem crescente
num.sort()
//Como buscar valores dentro do array? basta usar o código abaixo e entre () o valor desejado por exemplo 7 caso o valor não exista no vetor ele retornará -1 que significa que ele pesquisou e não houve ocorrência 
num.indexOf(7)

let num = [5,7,8,3,9]
num.push(2)
num.sort()
console.log(num)
console.log(num.length)
console.log(num[0])

podemos também usar estruturas de repetição para facilitar a verificação das arrays por exemplo:

var num = [8,1,2,3,9,6,5,4]

for(var pos = 0; pos < num.length; pos++){
    console.log(`A posição ${pos} tem o valor de ${num[pos]}`)
}

ou melhor ainda basta usar o for in da seguinte forma:

var num = [8,1,2,3,9,6,5,4]

for(var pos in num){
    console.log(`A posição ${pos} tem o valor de ${num[pos]}`)
}

podemos também fazer :

var num = [8,1,2,7,3,9,6,5,4]

num.sort()

for(var pos in num){
    console.log(`A posição ${pos} tem o valor de ${num[pos]}`)
}

let val = num.indexOf(7)

if(val == -1){
    console.log('Valor não encontrado!')
}else{
    console.log(`O valor está na posição ${val}`)
}